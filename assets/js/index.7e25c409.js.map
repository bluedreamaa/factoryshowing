{"version":3,"file":"index.7e25c409.js","sources":["../../../src/script.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n// import GUI from \"lil-gui\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader.js\";\n\n/**\n * Base\n */\n// Debug\n// const gui = new GUI();\n\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\");\n\n// Scene\nconst scene = new THREE.Scene();\nscene.background = new THREE.Color(0x99aa88);\n\nconst dracoLoader = new DRACOLoader();\ndracoLoader.setDecoderPath(\"/draco/\");\nconst gltfLoader = new GLTFLoader();\ngltfLoader.setDRACOLoader(dracoLoader);\n\nlet mixer = null;\n\ngltfLoader.load(\"models/LSmainfactory.glb\", (gltf) => {\n  gltf.scene.scale.set(0.05, 0.05, 0.05);\n  // fitModelToView(gltf.scene);\n  gltf.scene.position.set(0, 0, 0);\n  scene.add(gltf.scene);\n\n});\n\ngltfLoader.load(\"models/Fox.glb\", (gltf) => {\n  // use spread function to copy array\n  // const children = [...gltf.scene.children];\n  // for (const child of children) {\n  //   scene.add(child);\n  // }\n\n  mixer = new THREE.AnimationMixer(gltf.scene);\n  if (mixer!= null) {\n    const action = mixer.clipAction(gltf.animations[1]);\n    action.play();\n  }\n\n  gltf.scene.scale.set(0.02, 0.02, 0.02);\n  // fitModelToView(gltf.scene);\n  gltf.scene.position.set(3, 0, -3);\n  scene.add(gltf.scene);\n});\n\n// function fitModelToView(model) {\n//   // 计算模型的边界盒子\n//   //缩放尺寸\n//   const box = new THREE.Box3().setFromObject(model);\n//   const x = box.max.x - box.min.x;\n//   const y = box.max.y - box.min.y;\n//   const z = box.max.z - box.min.z;\n//   const maxDim = Math.max(x, y, z);\n\n//   const scale = 2 / maxDim;\n//   model.scale.set(scale, scale, scale);\n//   // model.position.set(0, 0, 0);\n\n//   // 计算边界盒子的大小\n//   var size = box.getSize(new THREE.Vector3()).length();\n//   // 设置相机的近和远剪面以适应模型大小\n//   camera.near = size / 1000;\n//   camera.far = size * 1000;\n//   // 更新相机状态\n//   camera.updateProjectionMatrix();\n// }\n\n/**\n * Lights\n */\nconst ambientLight = new THREE.AmbientLight(0xffffff, 2);\nscene.add(ambientLight);\n\nconst directionalLight = new THREE.DirectionalLight(0xffffff, 1);\ndirectionalLight.castShadow = true;\ndirectionalLight.shadow.mapSize.set(1024, 1024);\ndirectionalLight.shadow.camera.far = 15;\ndirectionalLight.shadow.camera.left = -7;\ndirectionalLight.shadow.camera.top = 7;\ndirectionalLight.shadow.camera.right = 7;\ndirectionalLight.shadow.camera.bottom = -7;\ndirectionalLight.position.set(5, 5, 5);\nscene.add(directionalLight);\n\n/**\n * Sizes\n */\nconst sizes = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n};\n\nwindow.addEventListener(\"resize\", () => {\n  // Update sizes\n  sizes.width = window.innerWidth;\n  sizes.height = window.innerHeight;\n\n  // Update camera\n  camera.aspect = sizes.width / sizes.height;\n  camera.updateProjectionMatrix();\n\n  // Update renderer\n  renderer.setSize(sizes.width, sizes.height);\n  renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n});\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  sizes.width / sizes.height,\n  0.1,\n  1000\n);\ncamera.position.set(7, 7, 7);\nscene.add(camera);\n\n// Controls\nconst controls = new OrbitControls(camera, canvas);\ncontrols.target.set(0, 0.75, 0);\ncontrols.enableDamping = true;\ncontrols.autoRotate = true;\ncontrols.autoRotateSpeed = 1;\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas,\n});\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock();\nlet previousTime = 0;\n\nconst tick = () => {\n  const elapsedTime = clock.getElapsedTime();\n  const deltaTime = elapsedTime - previousTime;\n  previousTime = elapsedTime;\n\n  //update mixer\n  if (mixer != null) {\n    mixer.update(deltaTime);\n  }\n\n  // Update controls\n  controls.update();\n\n  // Render\n  renderer.render(scene, camera);\n\n  // Call tick again on the next frame\n  window.requestAnimationFrame(tick);\n};\n\ntick();\n"],"names":["canvas","scene","THREE.Scene","THREE.Color","dracoLoader","DRACOLoader","gltfLoader","GLTFLoader","mixer","gltf","THREE.AnimationMixer","ambientLight","THREE.AmbientLight","directionalLight","THREE.DirectionalLight","sizes","camera","renderer","THREE.PerspectiveCamera","controls","OrbitControls","THREE.WebGLRenderer","THREE.PCFSoftShadowMap","clock","THREE.Clock","previousTime","tick","elapsedTime","deltaTime"],"mappings":"2zBAaA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAG9CC,EAAQ,IAAIC,EAClBD,EAAM,WAAa,IAAIE,EAAY,QAAQ,EAE3C,MAAMC,EAAc,IAAIC,EACxBD,EAAY,eAAe,SAAS,EACpC,MAAME,EAAa,IAAIC,EACvBD,EAAW,eAAeF,CAAW,EAErC,IAAII,EAAQ,KAEZF,EAAW,KAAK,2BAA6BG,GAAS,CACpDA,EAAK,MAAM,MAAM,IAAI,IAAM,IAAM,GAAI,EAErCA,EAAK,MAAM,SAAS,IAAI,EAAG,EAAG,CAAC,EAC/BR,EAAM,IAAIQ,EAAK,KAAK,CAEtB,CAAC,EAEDH,EAAW,KAAK,iBAAmBG,GAAS,CAO1CD,EAAQ,IAAIE,EAAqBD,EAAK,KAAK,EACvCD,GAAQ,MACKA,EAAM,WAAWC,EAAK,WAAW,CAAC,CAAC,EAC3C,KAAI,EAGbA,EAAK,MAAM,MAAM,IAAI,IAAM,IAAM,GAAI,EAErCA,EAAK,MAAM,SAAS,IAAI,EAAG,EAAG,EAAE,EAChCR,EAAM,IAAIQ,EAAK,KAAK,CACtB,CAAC,EA2BD,MAAME,EAAe,IAAIC,EAAmB,SAAU,CAAC,EACvDX,EAAM,IAAIU,CAAY,EAEtB,MAAME,EAAmB,IAAIC,EAAuB,SAAU,CAAC,EAC/DD,EAAiB,WAAa,GAC9BA,EAAiB,OAAO,QAAQ,IAAI,KAAM,IAAI,EAC9CA,EAAiB,OAAO,OAAO,IAAM,GACrCA,EAAiB,OAAO,OAAO,KAAO,GACtCA,EAAiB,OAAO,OAAO,IAAM,EACrCA,EAAiB,OAAO,OAAO,MAAQ,EACvCA,EAAiB,OAAO,OAAO,OAAS,GACxCA,EAAiB,SAAS,IAAI,EAAG,EAAG,CAAC,EACrCZ,EAAM,IAAIY,CAAgB,EAK1B,MAAME,EAAQ,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WACjB,EAEA,OAAO,iBAAiB,SAAU,IAAM,CAEtCA,EAAM,MAAQ,OAAO,WACrBA,EAAM,OAAS,OAAO,YAGtBC,EAAO,OAASD,EAAM,MAAQA,EAAM,OACpCC,EAAO,uBAAsB,EAG7BC,EAAS,QAAQF,EAAM,MAAOA,EAAM,MAAM,EAC1CE,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,CAC7D,CAAC,EAMD,MAAMD,EAAS,IAAIE,EACjB,GACAH,EAAM,MAAQA,EAAM,OACpB,GACA,GACF,EACAC,EAAO,SAAS,IAAI,EAAG,EAAG,CAAC,EAC3Bf,EAAM,IAAIe,CAAM,EAGhB,MAAMG,EAAW,IAAIC,EAAcJ,EAAQhB,CAAM,EACjDmB,EAAS,OAAO,IAAI,EAAG,IAAM,CAAC,EAC9BA,EAAS,cAAgB,GACzBA,EAAS,WAAa,GACtBA,EAAS,gBAAkB,EAK3B,MAAMF,EAAW,IAAII,EAAoB,CACvC,OAAQrB,CACV,CAAC,EACDiB,EAAS,UAAU,QAAU,GAC7BA,EAAS,UAAU,KAAOK,EAC1BL,EAAS,QAAQF,EAAM,MAAOA,EAAM,MAAM,EAC1CE,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,EAK3D,MAAMM,EAAQ,IAAIC,EAClB,IAAIC,EAAe,EAEnB,MAAMC,EAAO,IAAM,CACjB,MAAMC,EAAcJ,EAAM,iBACpBK,EAAYD,EAAcF,EAChCA,EAAeE,EAGXnB,GAAS,MACXA,EAAM,OAAOoB,CAAS,EAIxBT,EAAS,OAAM,EAGfF,EAAS,OAAOhB,EAAOe,CAAM,EAG7B,OAAO,sBAAsBU,CAAI,CACnC,EAEAA,EAAM"}